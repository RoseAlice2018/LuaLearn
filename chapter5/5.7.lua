---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by reebdeve.
--- DateTime: 2022/7/15 14:53
---
print(string.rep("-",50))
--- exp 1---
sunday = "monday"
monday = "sunday"
t = {sunday = "monday",[sunday] = monday}
---  t = {["sunday" = "monday",["monday"] = "sunday"]

print(t.sunday,t[sunday],t[t.sunday])
---  t.sunday == "monday"
---  t[sunday] == t ["monday"] == "sunday"
---  t[t.sunday] == t["monday"] == "sunday"
print(t["sunday"])
print(t[sunday])


--- exp2 ---
print(string.rep("-",30))
a = {}
a.a = a  -- a  the address of table
-- a.a.a.a = 3
print(a)
print(a.a)
print(a.a.a)
print(a.a.a.a)
a.a.a.a[1] = 3
print(a[1])
print(a["1"])
--- exp3 ---
local t =
{
    ["alarm"] = "\a",
    ["newline"] = "\n",
}

print("Line"..t.newline.."line")

--- exp4 ---

---  编写一个函数，该函数以多项式（使用表表示） 和 值X 为参数，返回对应多项式的值

function poly(t,x)
    local len_ = #t
    local ret = 0
    for k,v in ipairs(t) do
        ret = ret + t[k] * math.pow(x,len_ - k)
    end
    return ret
end

local test_poly = {1,1,1}

print(poly(test_poly,2))

--- copy from website ---
local function CalculatePolynomial(a,x)
    local result = 0
    x = x or 0
    if type(a) ~= "table" or #a < 0 then
        return result
    end
    for i = 1, #a do
        result = result + a[i] * x^(i-1)
    end
    return result
end

print(CalculatePolynomial({1,2,3},2))


---  exp5 ---
function CalculatePolynomial2(a,x)
    local result = 0
    if type(a) ~= "table" or #a <= 0 then
        return result
    end
    for i = #a,1,-1 do
        result = a[i] + result * x
    end
end
print(CalculatePolynomial({1,2,3},2))

--- exp6 ---
--- 写一个测试函数用于测试指定的表是否为有效的序列

local function isArray(a)
    if type(a) ~= "table" then
        return false
    end
    local count = 0
    local size = #a
    for _,_ in pairs(a) do
        count = count + 1
    end
    return count == size
end

print(isArray({1,2,3,4}))

print(isArray({1,nil,3,4}))


--- exp 7

print(string.rep("-",30))

--- 编写一个函数，该函数将指定列表的所有元素插入到另一个列表的指定位置

function movetoanother(src,dst,pos)
    for i = 1 , #src do
        table.insert(dst,pos,src[i])
        pos = pos + 1
    end
end


function test()
    source = {4,5,6}
    dst = {1,2,3,7,8,9}
    local result = ""
    movetoanother(source,dst,4)

    for i = 1 ,#dst do
        result = result..dst[i].." "
    end
    print(result)
end
print(test())

--- exp8
--- 实现contact函数

function table.my_slow_contact(t)
    local result = ""
    for i = 1,#t do
        result = result .. t[i]
    end
    return result
end





